generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Modelo principal para datos personales generales
model PersonalData {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  titularId         String          @db.ObjectId 
  datosGenerales    Json            
  categoria         CategoriaData   @default(GENERAL)
  fechaCreacion     DateTime        @default(now())
  fechaActualizacion DateTime       @updatedAt
  eliminado         Boolean         @default(false) 
  
  // Relaciones
  transferencias    DataTransfer[]
  sensitiveDatos    SensitiveData[]
  accessLogs        DataAccessLog[]

  @@index([titularId])
}

// Modelo para datos sensibles
model SensitiveData {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  personalDataId   String       @db.ObjectId
  tipo             TipoSensible
  datos            String       // Campo cifrado
  medidasSeguridad String[]    
  fechaCreacion    DateTime     @default(now())
  
  // Relación con PersonalData
  personalData     PersonalData @relation(fields: [personalDataId], references: [id])

  @@index([personalDataId])
}

// Modelo para transferencias de datos
model DataTransfer {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  personalDataId     String       @db.ObjectId
  destinatario       String      
  finalidad          String          
  baseLegal          BaseLegal    
  fechaTransferencia DateTime     @default(now())
  
  // Relación con PersonalData
  personalData       PersonalData @relation(fields: [personalDataId], references: [id])

  @@index([personalDataId])
}

// Modelo para solicitudes ARCO
model ARCORequest {
  id               String      @id @default(auto()) @map("_id") @db.ObjectId
  titularId        String      @db.ObjectId
  tipo             TipoARCO
  estado           EstadoARCO  @default(PENDIENTE)
  datosSolicitados String[]
  fechaSolicitud   DateTime    @default(now())
  fechaRespuesta   DateTime?
  motivoRechazo    String?     // Nuevo campo para documentar rechazos
  
  @@index([titularId])
}

// Modelo para auditoría
model DataAccessLog {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  personalDataId String      @db.ObjectId
  usuarioId      String      @db.ObjectId
  accion         AccionTipo
  detalles       String?     // Nuevo campo para más contexto
  fechaAcceso    DateTime    @default(now())
  
  // Relación con PersonalData
  personalData   PersonalData @relation(fields: [personalDataId], references: [id])

  @@index([personalDataId])
  @@index([usuarioId])
}

enum CategoriaData {
  GENERAL
  SALUD
  BIOMETRICOS
  MENORES
  JUDICIAL
}

enum TipoSensible {
  SALUD
  BIOMETRICO
  GENETICO
  IDEOLOGIA
  RELIGION
}

enum TipoARCO {
  ACCESO
  RECTIFICACION
  CANCELACION
  OPOSICION
}

enum EstadoARCO {
  PENDIENTE
  COMPLETADO
  RECHAZADO
}

enum BaseLegal {
  CONSENTIMIENTO
  CONTRATO
  INTERES_PUBLICO
  OBLIGACION_LEGAL
}

enum AccionTipo {
  LECTURA
  MODIFICACION
  ELIMINACION
}